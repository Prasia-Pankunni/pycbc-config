[workflow]
; http://ligo-cbc.github.io/pycbc/releases/v1.2.0/html/workflow/initialization.html
h1-channel-name = H1:DCS-CALIB_STRAIN_CLEAN_SUB60HZ_C01
l1-channel-name = L1:DCS-CALIB_STRAIN_CLEAN_SUB60HZ_C01
v1-channel-name = V1:Hrec_hoft_16384Hz[1:1252540000],V1:Hrec_hoft_V1O3ARepro1A_16384Hz[1252540000:1253980000],V1:Hrec_hoft_16384Hz[1253980000:2000000000]

[workflow-ifos]
h1 =
l1 =
v1 =

[workflow-datafind]
datafind-h1-frame-type = H1_HOFT_CLEAN_SUB60HZ_C01
datafind-l1-frame-type = L1_HOFT_CLEAN_SUB60HZ_C01
datafind-v1-frame-type = V1Online[1:1252540000],V1O3Repro1A[1252540000:1253980000],V1Online[1253980000:2000000000]

[workflow-segments]
segments-database-url = https://segments.ligo.org
segments-veto-definer-url = https://git.ligo.org/detchar/veto-definitions/raw/O3b_CBC_H1L1V1_C01_v1.3/cbc/O3/H1L1V1-HOFT_C01_V1ONLINE_O3_CBC.xml
; Use dqsegdb and not GWOSC to get segments
segments-source = dqsegdb
segments-vetoes = +CAT_2,+CAT_H

[workflow-segments-h1]
; CAT_1 veto segments *removed* from analyzed time
segments-science = +DCS-ANALYSIS_READY_C01:1,-CAT_1

[workflow-segments-l1]
segments-science = +DCS-ANALYSIS_READY_C01:1,-CAT_1

[workflow-segments-v1]
segments-science = +ITF_SCIENCE:2,-CAT_1

[datafind]
urltype = file

